use poseidon::convert::felts_from_str;
use poseidon::hash_sw8 as hash;
use poseidon::parameters::sw8::GF;

#[test]
fn test_hash_simple() {
    let input = ["0", "0", "0", "0", "0", "0", "0", "0"];
    let input = felts_from_str::<GF>(&input);
    let expected = [
        "1534116856660032929112709488204491699743182428465681149262739677337223235050",
        "1710856073207389764546990138116985223517553616229641666885337928044617114700",
        "3165864635055638516987240200217592641540231237468651257819894959934472989427",
        "1003007637710164252047715558598366312649052908276423203724288341354608811559",
        "68117303579957054409211824649914588822081700129416361923518488718489651489",
        "1123395637839379807713801282868237406546107732595903195840754789810160564711",
        "478590974834311070537087181212389392308746075734019180430422247431982932503",
        "835322726024358888065061514739954009068852229059154336727219387089732433787",
    ];
    let expected = felts_from_str::<GF>(&expected);
    let output = hash(&input);
    assert_eq!(output, expected);
}

#[test]
#[should_panic]
fn test_hash_wrong_size() {
    let input = ["0", "7", "98", "0", "0"];
    let input = felts_from_str::<GF>(&input);
    hash(&input);
}
